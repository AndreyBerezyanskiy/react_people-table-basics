{"version":3,"sources":["components/NavbarLink/NavbarLink.tsx","components/Navbar/Navbar.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["NavbarLink","to","text","className","isActive","cn","Navbar","role","Loader","PersonLink","person","name","sex","slug","PersonItem","slugId","father","mother","born","died","motherName","fatherName","isSelected","PeopleTable","people","map","find","human","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useParams","isPeople","length","isEmptyTable","fetchPeople","useCallback","data","console","log","useEffect","HomePage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b5da4fec.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  text: string;\n}\nexport const NavbarLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => cn(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { NavbarLink } from '../NavbarLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavbarLink to=\"/\" text=\"Home\" />\n\n        <NavbarLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <Link\n      className={cn({ 'has-text-danger': sex === 'f' })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  slugId: string;\n  mother: Person | null;\n  father: Person | null;\n}\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  slugId,\n  father,\n  mother,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const isSelected = slug === slugId;\n\n  return (\n    <tr\n      data-cy=\"person \"\n      className={cn({ 'has-background-warning': isSelected })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink person={mother} />\n          )\n          : (\n            motherName || '-'\n          )}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink person={father} />\n          )\n          : (\n            fatherName || '-'\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ninterface Props {\n  people: Person[];\n  slug: string;\n}\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  slug,\n}) => {\n  return (\n    <tbody>\n      {people.map(person => {\n        const mother = people.find(human => (\n          human.name === person.motherName)) || null;\n\n        const father = people.find(human => (\n          human.name === person.fatherName)) || null;\n\n        return (\n          <PersonItem\n            person={person}\n            key={person.slug}\n            slugId={slug}\n            mother={mother}\n            father={father}\n          />\n        );\n      })}\n    </tbody>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const { slug = '' } = useParams();\n\n  const isPeople = !isLoading && !hasError && people.length > 0;\n  const isEmptyTable = !isLoading && !hasError && people.length === 0;\n\n  const fetchPeople = useCallback(async () => {\n    try {\n      setHasError(false);\n\n      const data = await getPeople();\n\n      setPeople(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  if (hasError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader /> }\n\n          {isPeople && (\n            <>\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable\n                    is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <PeopleTable people={people} slug={slug} />\n              </table>\n            </>\n          )}\n\n          {isEmptyTable && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          ) }\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nimport './App.scss';\nimport {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}